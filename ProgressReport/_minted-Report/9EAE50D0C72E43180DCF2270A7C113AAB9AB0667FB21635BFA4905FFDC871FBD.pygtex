\begin{Verbatim}[commandchars=\\\{\}]
\PYG{k+kr}{module} \PYG{n+nn}{Synthesis.Resugar}

\PYG{k+kr}{import} \PYG{n+nn}{Data.Strings}

\PYG{k+kr}{import} \PYG{n+nn}{TTImp.TTImp}

\PYG{k+kr}{import} \PYG{n+nn}{Core.TT}


\PYG{k+kr}{mutual}
\PYG{n+nf}{resugarPat} \PYG{o+ow}{:} \PYG{k+kt}{Name} \PYG{o+ow}{\PYGZhy{}\PYGZgt{}}
			 \PYG{o+ow}{(}pat \PYG{o+ow}{:} \PYG{k+kt}{RawImp}\PYG{o+ow}{)} \PYG{o+ow}{\PYGZhy{}\PYGZgt{}}
			 \PYG{o+ow}{(}scope \PYG{o+ow}{:} \PYG{k+kt}{RawImp}\PYG{o+ow}{)} \PYG{o+ow}{\PYGZhy{}\PYGZgt{}}
			 \PYG{o+ow}{(}first \PYG{o+ow}{:} \PYG{k+kt}{Bool}\PYG{o+ow}{)} \PYG{o+ow}{\PYGZhy{}\PYGZgt{}}
			 \PYG{k+kt}{String}
resugarPat x pat scope \PYG{k+kt}{True}
  \PYG{o+ow}{=} \PYG{l+s}{\PYGZdq{}pat \PYGZdq{}} \PYG{o+ow}{++} resugarPat x pat scope \PYG{k+kt}{False}
resugarPat x pat \PYG{o+ow}{(}\PYG{k+kt}{IPatvar} y ty scope\PYG{o+ow}{)} \PYG{k+kt}{False}
  \PYG{o+ow}{=} show x \PYG{o+ow}{++} \PYG{l+s}{\PYGZdq{} : \PYGZdq{}} \PYG{o+ow}{++} resugar pat \PYG{o+ow}{++} \PYG{l+s}{\PYGZdq{} , \PYGZdq{}} \PYG{o+ow}{++} resugarPat y ty scope \PYG{k+kt}{False}
resugarPat x pat scope \PYG{k+kt}{False}
  \PYG{o+ow}{=} show x \PYG{o+ow}{++} \PYG{l+s}{\PYGZdq{} : \PYGZdq{}} \PYG{o+ow}{++} resugar pat \PYG{o+ow}{++} \PYG{l+s}{\PYGZdq{} =\PYGZgt{} \PYGZdq{}} \PYG{o+ow}{++} resugar scope

\PYG{n+nf}{resugarLam} \PYG{o+ow}{:} \PYG{o+ow}{(}\PYG{k+kt}{Maybe} \PYG{k+kt}{Name}\PYG{o+ow}{)} \PYG{o+ow}{\PYGZhy{}\PYGZgt{}}
			 \PYG{o+ow}{(}scope \PYG{o+ow}{:} \PYG{k+kt}{RawImp}\PYG{o+ow}{)} \PYG{o+ow}{\PYGZhy{}\PYGZgt{}}
			 \PYG{o+ow}{(}first \PYG{o+ow}{:} \PYG{k+kt}{Bool}\PYG{o+ow}{)} \PYG{o+ow}{\PYGZhy{}\PYGZgt{}}
			 \PYG{k+kt}{String}
resugarLam x scope \PYG{k+kt}{True}
  \PYG{o+ow}{=} \PYG{l+s}{\PYGZdq{}}\PYG{l+s+se}{\PYGZbs{}}\PYG{err}{ }\PYG{l+s+se}{\PYGZdq{}}\PYG{l+s}{ ++ resugarLam x scope False}
\PYG{l+s}{resugarLam Nothing (ILam y z argTy scope) False}
\PYG{l+s}{  = \PYGZdq{}} \PYG{k+kr}{\PYGZus{}} \PYG{l+s}{\PYGZdq{} ++ resugarLam z scope False}
\PYG{l+s}{resugarLam (Just x) (ILam y z argTy scope) False}
\PYG{l+s}{  = show x ++ \PYGZdq{}} \PYG{l+s}{\PYGZdq{} ++ resugarLam z scope False}
\PYG{l+s}{resugarLam Nothing scope False}
\PYG{l+s}{  = \PYGZdq{}} \PYG{k+kr}{\PYGZus{}} \PYG{o+ow}{=\PYGZgt{}} \PYG{l+s}{\PYGZdq{} ++ resugar scope}
\PYG{l+s}{resugarLam (Just x) scope False}
\PYG{l+s}{  = show x ++ \PYGZdq{}} \PYG{o+ow}{=\PYGZgt{}} \PYG{l+s}{\PYGZdq{} ++ resugar scope}

\PYG{l+s}{export}
\PYG{l+s}{resugar : RawImp \PYGZhy{}\PYGZgt{} String}
\PYG{l+s}{resugar (IVar x) = show x}
\PYG{l+s}{resugar (IPi x Nothing argTy scope)}
\PYG{l+s}{  = \PYGZdq{}} \PYG{o+ow}{(} \PYG{k+kr}{\PYGZus{}} \PYG{o+ow}{:} \PYG{l+s}{\PYGZdq{} ++ resugar argTy ++ \PYGZdq{}}\PYG{o+ow}{)} \PYG{o+ow}{\PYGZhy{}\PYGZgt{}} \PYG{l+s}{\PYGZdq{} ++ resugar scope}
\PYG{l+s}{resugar (IPi x (Just y) argTy scope)}
\PYG{l+s}{  = \PYGZdq{}} \PYG{o+ow}{(} \PYG{l+s}{\PYGZdq{} ++ show y ++ \PYGZdq{}} \PYG{o+ow}{:} \PYG{l+s}{\PYGZdq{} ++ resugar argTy ++ \PYGZdq{}} \PYG{o+ow}{)} \PYG{o+ow}{\PYGZhy{}\PYGZgt{}} \PYG{l+s}{\PYGZdq{} ++ resugar scope}
\PYG{l+s}{resugar (ILam x y argTy scope) = resugarLam y scope True}
\PYG{l+s}{resugar (IPatvar x ty scope) = resugarPat x ty scope True}
\PYG{l+s}{resugar (IApp x y) = \PYGZdq{}}\PYG{o+ow}{(} \PYG{l+s}{\PYGZdq{} ++ (resugar x) ++ \PYGZdq{}} \PYG{l+s}{\PYGZdq{} ++ resugar y ++ \PYGZdq{}} \PYG{o+ow}{)}\PYG{l+s}{\PYGZdq{}}
\PYG{l+s}{resugar (IHole x) = \PYGZdq{}}\PYG{o+ow}{?}\PYG{l+s}{\PYGZdq{} ++ show x}
\PYG{l+s}{resugar Implicit = \PYGZdq{}}\PYG{k+kr}{\PYGZus{}}\PYG{l+s}{\PYGZdq{}}
\PYG{l+s}{resugar IType = \PYGZdq{}} \PYG{o+ow}{:} \PYG{l+s}{\PYGZdq{}}
\end{Verbatim}
